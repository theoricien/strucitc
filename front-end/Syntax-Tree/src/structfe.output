Terminals unused in grammar

   INC_OP
   DEC_OP


State 153 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 primary_expression: IDENTIFIER
    2                   | CONSTANT
    3                   | '(' expression ')'

    4 postfix_expression: primary_expression
    5                   | postfix_expression '(' ')'
    6                   | postfix_expression '(' argument_expression_list ')'
    7                   | postfix_expression '.' IDENTIFIER
    8                   | postfix_expression PTR_OP IDENTIFIER

    9 argument_expression_list: expression
   10                         | argument_expression_list ',' expression

   11 unary_expression: postfix_expression
   12                 | unary_operator unary_expression
   13                 | SIZEOF '(' type_specifier ')'
   14                 | SIZEOF '(' expression ')'

   15 unary_operator: '&'
   16               | '*'
   17               | '-'

   18 multiplicative_expression: unary_expression
   19                          | multiplicative_expression '*' unary_expression
   20                          | multiplicative_expression '/' unary_expression

   21 additive_expression: multiplicative_expression
   22                    | additive_expression '+' multiplicative_expression
   23                    | additive_expression '-' multiplicative_expression

   24 relational_expression: additive_expression
   25                      | relational_expression L_OP additive_expression
   26                      | relational_expression G_OP additive_expression
   27                      | relational_expression LE_OP additive_expression
   28                      | relational_expression GE_OP additive_expression

   29 equality_expression: relational_expression
   30                    | equality_expression EQ_OP relational_expression
   31                    | equality_expression NE_OP relational_expression

   32 logical_and_expression: equality_expression
   33                       | logical_and_expression AND_OP equality_expression

   34 logical_or_expression: logical_and_expression
   35                      | logical_or_expression OR_OP logical_and_expression

   36 binary_expression: logical_or_expression RB_OP logical_or_expression
   37                  | logical_or_expression LB_OP logical_or_expression

   38 expression: logical_or_expression
   39           | unary_expression '=' expression
   40           | binary_expression

   41 declaration: declaration_specifiers declarator ';'
   42            | struct_specifier ';'

   43 declaration_specifiers: EXTERN type_specifier
   44                       | type_specifier

   45 type_specifier: VOID
   46               | INT
   47               | struct_specifier

   48 struct_specifier: STRUCT IDENTIFIER '{' struct_declaration_list '}'
   49                 | STRUCT '{' struct_declaration_list '}'
   50                 | STRUCT IDENTIFIER

   51 struct_declaration_list: struct_declaration
   52                        | struct_declaration_list struct_declaration

   53 struct_declaration: type_specifier declarator ';'

   54 declarator: '*' direct_declarator
   55           | direct_declarator

   56 direct_declarator: IDENTIFIER
   57                  | '(' declarator ')'
   58                  | direct_declarator '(' parameter_list ')'
   59                  | direct_declarator '(' ')'

   60 parameter_list: parameter_declaration
   61               | parameter_list ',' parameter_declaration

   62 parameter_declaration: declaration_specifiers declarator

   63 statement: compound_statement
   64          | expression_statement
   65          | selection_statement
   66          | iteration_statement
   67          | jump_statement

   68 compound_statement: '{' '}'
   69                   | '{' statement_list '}'
   70                   | '{' declaration_list '}'
   71                   | '{' declaration_list statement_list '}'

   72 declaration_list: declaration
   73                 | declaration_list declaration

   74 statement_list: statement
   75               | statement_list statement

   76 expression_statement: ';'
   77                     | expression ';'

   78 selection_statement: IF '(' expression ')' statement
   79                    | IF '(' expression ')' statement ELSE statement

   80 iteration_statement: WHILE '(' expression ')' statement
   81                    | FOR '(' expression_statement expression_statement expression ')' statement

   82 jump_statement: RETURN ';'
   83               | RETURN expression ';'

   84 program: external_declaration
   85        | program external_declaration

   86 external_declaration: function_definition
   87                     | declaration

   88 function_definition: declaration_specifiers declarator compound_statement


Terminals, with rules where they appear

$end (0) 0
'&' (38) 15
'(' (40) 3 5 6 13 14 57 58 59 78 79 80 81
')' (41) 3 5 6 13 14 57 58 59 78 79 80 81
'*' (42) 16 19 54
'+' (43) 22
',' (44) 10 61
'-' (45) 17 23
'.' (46) 7
'/' (47) 20
';' (59) 41 42 53 76 77 82 83
'=' (61) 39
'{' (123) 48 49 68 69 70 71
'}' (125) 48 49 68 69 70 71
error (256)
IDENTIFIER (258) 1 7 8 48 50 56
CONSTANT (259) 2
SIZEOF (260) 13 14
PTR_OP (261) 8
LE_OP (262) 27
GE_OP (263) 28
L_OP (264) 25
G_OP (265) 26
EQ_OP (266) 30
NE_OP (267) 31
INC_OP (268)
DEC_OP (269)
RB_OP (270) 36
LB_OP (271) 37
AND_OP (272) 33
OR_OP (273) 35
EXTERN (274) 43
INT (275) 46
VOID (276) 45
STRUCT (277) 48 49 50
IF (278) 78 79
ELSE (279) 79
WHILE (280) 80
FOR (281) 81
RETURN (282) 82 83


Nonterminals, with rules where they appear

$accept (41)
    on left: 0
primary_expression (42)
    on left: 1 2 3, on right: 4
postfix_expression (43)
    on left: 4 5 6 7 8, on right: 5 6 7 8 11
argument_expression_list (44)
    on left: 9 10, on right: 6 10
unary_expression (45)
    on left: 11 12 13 14, on right: 12 18 19 20 39
unary_operator (46)
    on left: 15 16 17, on right: 12
multiplicative_expression (47)
    on left: 18 19 20, on right: 19 20 21 22 23
additive_expression (48)
    on left: 21 22 23, on right: 22 23 24 25 26 27 28
relational_expression (49)
    on left: 24 25 26 27 28, on right: 25 26 27 28 29 30 31
equality_expression (50)
    on left: 29 30 31, on right: 30 31 32 33
logical_and_expression (51)
    on left: 32 33, on right: 33 34 35
logical_or_expression (52)
    on left: 34 35, on right: 35 36 37 38
binary_expression (53)
    on left: 36 37, on right: 40
expression (54)
    on left: 38 39 40, on right: 3 9 10 14 39 77 78 79 80 81 83
declaration (55)
    on left: 41 42, on right: 72 73 87
declaration_specifiers (56)
    on left: 43 44, on right: 41 62 88
type_specifier (57)
    on left: 45 46 47, on right: 13 43 44 53
struct_specifier (58)
    on left: 48 49 50, on right: 42 47
struct_declaration_list (59)
    on left: 51 52, on right: 48 49 52
struct_declaration (60)
    on left: 53, on right: 51 52
declarator (61)
    on left: 54 55, on right: 41 53 57 62 88
direct_declarator (62)
    on left: 56 57 58 59, on right: 54 55 58 59
parameter_list (63)
    on left: 60 61, on right: 58 61
parameter_declaration (64)
    on left: 62, on right: 60 61
statement (65)
    on left: 63 64 65 66 67, on right: 74 75 78 79 80 81
compound_statement (66)
    on left: 68 69 70 71, on right: 63 88
declaration_list (67)
    on left: 72 73, on right: 70 71 73
statement_list (68)
    on left: 74 75, on right: 69 71 75
expression_statement (69)
    on left: 76 77, on right: 64 81
selection_statement (70)
    on left: 78 79, on right: 65
iteration_statement (71)
    on left: 80 81, on right: 66
jump_statement (72)
    on left: 82 83, on right: 67
program (73)
    on left: 84 85, on right: 0 85
external_declaration (74)
    on left: 86 87, on right: 84 85
function_definition (75)
    on left: 88, on right: 86


State 0

    0 $accept: . program $end

    EXTERN  shift, and go to state 1
    INT     shift, and go to state 2
    VOID    shift, and go to state 3
    STRUCT  shift, and go to state 4

    declaration             go to state 5
    declaration_specifiers  go to state 6
    type_specifier          go to state 7
    struct_specifier        go to state 8
    program                 go to state 9
    external_declaration    go to state 10
    function_definition     go to state 11


State 1

   43 declaration_specifiers: EXTERN . type_specifier

    INT     shift, and go to state 2
    VOID    shift, and go to state 3
    STRUCT  shift, and go to state 4

    type_specifier    go to state 12
    struct_specifier  go to state 13


State 2

   46 type_specifier: INT .

    $default  reduce using rule 46 (type_specifier)


State 3

   45 type_specifier: VOID .

    $default  reduce using rule 45 (type_specifier)


State 4

   48 struct_specifier: STRUCT . IDENTIFIER '{' struct_declaration_list '}'
   49                 | STRUCT . '{' struct_declaration_list '}'
   50                 | STRUCT . IDENTIFIER

    IDENTIFIER  shift, and go to state 14
    '{'         shift, and go to state 15


State 5

   87 external_declaration: declaration .

    $default  reduce using rule 87 (external_declaration)


State 6

   41 declaration: declaration_specifiers . declarator ';'
   88 function_definition: declaration_specifiers . declarator compound_statement

    IDENTIFIER  shift, and go to state 16
    '('         shift, and go to state 17
    '*'         shift, and go to state 18

    declarator         go to state 19
    direct_declarator  go to state 20


State 7

   44 declaration_specifiers: type_specifier .

    $default  reduce using rule 44 (declaration_specifiers)


State 8

   42 declaration: struct_specifier . ';'
   47 type_specifier: struct_specifier .

    ';'  shift, and go to state 21

    $default  reduce using rule 47 (type_specifier)


State 9

    0 $accept: program . $end
   85 program: program . external_declaration

    $end    shift, and go to state 22
    EXTERN  shift, and go to state 1
    INT     shift, and go to state 2
    VOID    shift, and go to state 3
    STRUCT  shift, and go to state 4

    declaration             go to state 5
    declaration_specifiers  go to state 6
    type_specifier          go to state 7
    struct_specifier        go to state 8
    external_declaration    go to state 23
    function_definition     go to state 11


State 10

   84 program: external_declaration .

    $default  reduce using rule 84 (program)


State 11

   86 external_declaration: function_definition .

    $default  reduce using rule 86 (external_declaration)


State 12

   43 declaration_specifiers: EXTERN type_specifier .

    $default  reduce using rule 43 (declaration_specifiers)


State 13

   47 type_specifier: struct_specifier .

    $default  reduce using rule 47 (type_specifier)


State 14

   48 struct_specifier: STRUCT IDENTIFIER . '{' struct_declaration_list '}'
   50                 | STRUCT IDENTIFIER .

    '{'  shift, and go to state 24

    $default  reduce using rule 50 (struct_specifier)


State 15

   49 struct_specifier: STRUCT '{' . struct_declaration_list '}'

    INT     shift, and go to state 2
    VOID    shift, and go to state 3
    STRUCT  shift, and go to state 4

    type_specifier           go to state 25
    struct_specifier         go to state 13
    struct_declaration_list  go to state 26
    struct_declaration       go to state 27


State 16

   56 direct_declarator: IDENTIFIER .

    $default  reduce using rule 56 (direct_declarator)


State 17

   57 direct_declarator: '(' . declarator ')'

    IDENTIFIER  shift, and go to state 16
    '('         shift, and go to state 17
    '*'         shift, and go to state 18

    declarator         go to state 28
    direct_declarator  go to state 20


State 18

   54 declarator: '*' . direct_declarator

    IDENTIFIER  shift, and go to state 16
    '('         shift, and go to state 17

    direct_declarator  go to state 29


State 19

   41 declaration: declaration_specifiers declarator . ';'
   88 function_definition: declaration_specifiers declarator . compound_statement

    ';'  shift, and go to state 30
    '{'  shift, and go to state 31

    compound_statement  go to state 32


State 20

   55 declarator: direct_declarator .
   58 direct_declarator: direct_declarator . '(' parameter_list ')'
   59                  | direct_declarator . '(' ')'

    '('  shift, and go to state 33

    $default  reduce using rule 55 (declarator)


State 21

   42 declaration: struct_specifier ';' .

    $default  reduce using rule 42 (declaration)


State 22

    0 $accept: program $end .

    $default  accept


State 23

   85 program: program external_declaration .

    $default  reduce using rule 85 (program)


State 24

   48 struct_specifier: STRUCT IDENTIFIER '{' . struct_declaration_list '}'

    INT     shift, and go to state 2
    VOID    shift, and go to state 3
    STRUCT  shift, and go to state 4

    type_specifier           go to state 25
    struct_specifier         go to state 13
    struct_declaration_list  go to state 34
    struct_declaration       go to state 27


State 25

   53 struct_declaration: type_specifier . declarator ';'

    IDENTIFIER  shift, and go to state 16
    '('         shift, and go to state 17
    '*'         shift, and go to state 18

    declarator         go to state 35
    direct_declarator  go to state 20


State 26

   49 struct_specifier: STRUCT '{' struct_declaration_list . '}'
   52 struct_declaration_list: struct_declaration_list . struct_declaration

    INT     shift, and go to state 2
    VOID    shift, and go to state 3
    STRUCT  shift, and go to state 4
    '}'     shift, and go to state 36

    type_specifier      go to state 25
    struct_specifier    go to state 13
    struct_declaration  go to state 37


State 27

   51 struct_declaration_list: struct_declaration .

    $default  reduce using rule 51 (struct_declaration_list)


State 28

   57 direct_declarator: '(' declarator . ')'

    ')'  shift, and go to state 38


State 29

   54 declarator: '*' direct_declarator .
   58 direct_declarator: direct_declarator . '(' parameter_list ')'
   59                  | direct_declarator . '(' ')'

    '('  shift, and go to state 33

    $default  reduce using rule 54 (declarator)


State 30

   41 declaration: declaration_specifiers declarator ';' .

    $default  reduce using rule 41 (declaration)


State 31

   68 compound_statement: '{' . '}'
   69                   | '{' . statement_list '}'
   70                   | '{' . declaration_list '}'
   71                   | '{' . declaration_list statement_list '}'

    IDENTIFIER  shift, and go to state 39
    CONSTANT    shift, and go to state 40
    SIZEOF      shift, and go to state 41
    EXTERN      shift, and go to state 1
    INT         shift, and go to state 2
    VOID        shift, and go to state 3
    STRUCT      shift, and go to state 4
    IF          shift, and go to state 42
    WHILE       shift, and go to state 43
    FOR         shift, and go to state 44
    RETURN      shift, and go to state 45
    '('         shift, and go to state 46
    '&'         shift, and go to state 47
    '*'         shift, and go to state 48
    '-'         shift, and go to state 49
    ';'         shift, and go to state 50
    '{'         shift, and go to state 31
    '}'         shift, and go to state 51

    primary_expression         go to state 52
    postfix_expression         go to state 53
    unary_expression           go to state 54
    unary_operator             go to state 55
    multiplicative_expression  go to state 56
    additive_expression        go to state 57
    relational_expression      go to state 58
    equality_expression        go to state 59
    logical_and_expression     go to state 60
    logical_or_expression      go to state 61
    binary_expression          go to state 62
    expression                 go to state 63
    declaration                go to state 64
    declaration_specifiers     go to state 65
    type_specifier             go to state 7
    struct_specifier           go to state 8
    statement                  go to state 66
    compound_statement         go to state 67
    declaration_list           go to state 68
    statement_list             go to state 69
    expression_statement       go to state 70
    selection_statement        go to state 71
    iteration_statement        go to state 72
    jump_statement             go to state 73


State 32

   88 function_definition: declaration_specifiers declarator compound_statement .

    $default  reduce using rule 88 (function_definition)


State 33

   58 direct_declarator: direct_declarator '(' . parameter_list ')'
   59                  | direct_declarator '(' . ')'

    EXTERN  shift, and go to state 1
    INT     shift, and go to state 2
    VOID    shift, and go to state 3
    STRUCT  shift, and go to state 4
    ')'     shift, and go to state 74

    declaration_specifiers  go to state 75
    type_specifier          go to state 7
    struct_specifier        go to state 13
    parameter_list          go to state 76
    parameter_declaration   go to state 77


State 34

   48 struct_specifier: STRUCT IDENTIFIER '{' struct_declaration_list . '}'
   52 struct_declaration_list: struct_declaration_list . struct_declaration

    INT     shift, and go to state 2
    VOID    shift, and go to state 3
    STRUCT  shift, and go to state 4
    '}'     shift, and go to state 78

    type_specifier      go to state 25
    struct_specifier    go to state 13
    struct_declaration  go to state 37


State 35

   53 struct_declaration: type_specifier declarator . ';'

    ';'  shift, and go to state 79


State 36

   49 struct_specifier: STRUCT '{' struct_declaration_list '}' .

    $default  reduce using rule 49 (struct_specifier)


State 37

   52 struct_declaration_list: struct_declaration_list struct_declaration .

    $default  reduce using rule 52 (struct_declaration_list)


State 38

   57 direct_declarator: '(' declarator ')' .

    $default  reduce using rule 57 (direct_declarator)


State 39

    1 primary_expression: IDENTIFIER .

    $default  reduce using rule 1 (primary_expression)


State 40

    2 primary_expression: CONSTANT .

    $default  reduce using rule 2 (primary_expression)


State 41

   13 unary_expression: SIZEOF . '(' type_specifier ')'
   14                 | SIZEOF . '(' expression ')'

    '('  shift, and go to state 80


State 42

   78 selection_statement: IF . '(' expression ')' statement
   79                    | IF . '(' expression ')' statement ELSE statement

    '('  shift, and go to state 81


State 43

   80 iteration_statement: WHILE . '(' expression ')' statement

    '('  shift, and go to state 82


State 44

   81 iteration_statement: FOR . '(' expression_statement expression_statement expression ')' statement

    '('  shift, and go to state 83


State 45

   82 jump_statement: RETURN . ';'
   83               | RETURN . expression ';'

    IDENTIFIER  shift, and go to state 39
    CONSTANT    shift, and go to state 40
    SIZEOF      shift, and go to state 41
    '('         shift, and go to state 46
    '&'         shift, and go to state 47
    '*'         shift, and go to state 48
    '-'         shift, and go to state 49
    ';'         shift, and go to state 84

    primary_expression         go to state 52
    postfix_expression         go to state 53
    unary_expression           go to state 54
    unary_operator             go to state 55
    multiplicative_expression  go to state 56
    additive_expression        go to state 57
    relational_expression      go to state 58
    equality_expression        go to state 59
    logical_and_expression     go to state 60
    logical_or_expression      go to state 61
    binary_expression          go to state 62
    expression                 go to state 85


State 46

    3 primary_expression: '(' . expression ')'

    IDENTIFIER  shift, and go to state 39
    CONSTANT    shift, and go to state 40
    SIZEOF      shift, and go to state 41
    '('         shift, and go to state 46
    '&'         shift, and go to state 47
    '*'         shift, and go to state 48
    '-'         shift, and go to state 49

    primary_expression         go to state 52
    postfix_expression         go to state 53
    unary_expression           go to state 54
    unary_operator             go to state 55
    multiplicative_expression  go to state 56
    additive_expression        go to state 57
    relational_expression      go to state 58
    equality_expression        go to state 59
    logical_and_expression     go to state 60
    logical_or_expression      go to state 61
    binary_expression          go to state 62
    expression                 go to state 86


State 47

   15 unary_operator: '&' .

    $default  reduce using rule 15 (unary_operator)


State 48

   16 unary_operator: '*' .

    $default  reduce using rule 16 (unary_operator)


State 49

   17 unary_operator: '-' .

    $default  reduce using rule 17 (unary_operator)


State 50

   76 expression_statement: ';' .

    $default  reduce using rule 76 (expression_statement)


State 51

   68 compound_statement: '{' '}' .

    $default  reduce using rule 68 (compound_statement)


State 52

    4 postfix_expression: primary_expression .

    $default  reduce using rule 4 (postfix_expression)


State 53

    5 postfix_expression: postfix_expression . '(' ')'
    6                   | postfix_expression . '(' argument_expression_list ')'
    7                   | postfix_expression . '.' IDENTIFIER
    8                   | postfix_expression . PTR_OP IDENTIFIER
   11 unary_expression: postfix_expression .

    PTR_OP  shift, and go to state 87
    '('     shift, and go to state 88
    '.'     shift, and go to state 89

    $default  reduce using rule 11 (unary_expression)


State 54

   18 multiplicative_expression: unary_expression .
   39 expression: unary_expression . '=' expression

    '='  shift, and go to state 90

    $default  reduce using rule 18 (multiplicative_expression)


State 55

   12 unary_expression: unary_operator . unary_expression

    IDENTIFIER  shift, and go to state 39
    CONSTANT    shift, and go to state 40
    SIZEOF      shift, and go to state 41
    '('         shift, and go to state 46
    '&'         shift, and go to state 47
    '*'         shift, and go to state 48
    '-'         shift, and go to state 49

    primary_expression  go to state 52
    postfix_expression  go to state 53
    unary_expression    go to state 91
    unary_operator      go to state 55


State 56

   19 multiplicative_expression: multiplicative_expression . '*' unary_expression
   20                          | multiplicative_expression . '/' unary_expression
   21 additive_expression: multiplicative_expression .

    '*'  shift, and go to state 92
    '/'  shift, and go to state 93

    $default  reduce using rule 21 (additive_expression)


State 57

   22 additive_expression: additive_expression . '+' multiplicative_expression
   23                    | additive_expression . '-' multiplicative_expression
   24 relational_expression: additive_expression .

    '-'  shift, and go to state 94
    '+'  shift, and go to state 95

    $default  reduce using rule 24 (relational_expression)


State 58

   25 relational_expression: relational_expression . L_OP additive_expression
   26                      | relational_expression . G_OP additive_expression
   27                      | relational_expression . LE_OP additive_expression
   28                      | relational_expression . GE_OP additive_expression
   29 equality_expression: relational_expression .

    LE_OP  shift, and go to state 96
    GE_OP  shift, and go to state 97
    L_OP   shift, and go to state 98
    G_OP   shift, and go to state 99

    $default  reduce using rule 29 (equality_expression)


State 59

   30 equality_expression: equality_expression . EQ_OP relational_expression
   31                    | equality_expression . NE_OP relational_expression
   32 logical_and_expression: equality_expression .

    EQ_OP  shift, and go to state 100
    NE_OP  shift, and go to state 101

    $default  reduce using rule 32 (logical_and_expression)


State 60

   33 logical_and_expression: logical_and_expression . AND_OP equality_expression
   34 logical_or_expression: logical_and_expression .

    AND_OP  shift, and go to state 102

    $default  reduce using rule 34 (logical_or_expression)


State 61

   35 logical_or_expression: logical_or_expression . OR_OP logical_and_expression
   36 binary_expression: logical_or_expression . RB_OP logical_or_expression
   37                  | logical_or_expression . LB_OP logical_or_expression
   38 expression: logical_or_expression .

    RB_OP  shift, and go to state 103
    LB_OP  shift, and go to state 104
    OR_OP  shift, and go to state 105

    $default  reduce using rule 38 (expression)


State 62

   40 expression: binary_expression .

    $default  reduce using rule 40 (expression)


State 63

   77 expression_statement: expression . ';'

    ';'  shift, and go to state 106


State 64

   72 declaration_list: declaration .

    $default  reduce using rule 72 (declaration_list)


State 65

   41 declaration: declaration_specifiers . declarator ';'

    IDENTIFIER  shift, and go to state 16
    '('         shift, and go to state 17
    '*'         shift, and go to state 18

    declarator         go to state 107
    direct_declarator  go to state 20


State 66

   74 statement_list: statement .

    $default  reduce using rule 74 (statement_list)


State 67

   63 statement: compound_statement .

    $default  reduce using rule 63 (statement)


State 68

   70 compound_statement: '{' declaration_list . '}'
   71                   | '{' declaration_list . statement_list '}'
   73 declaration_list: declaration_list . declaration

    IDENTIFIER  shift, and go to state 39
    CONSTANT    shift, and go to state 40
    SIZEOF      shift, and go to state 41
    EXTERN      shift, and go to state 1
    INT         shift, and go to state 2
    VOID        shift, and go to state 3
    STRUCT      shift, and go to state 4
    IF          shift, and go to state 42
    WHILE       shift, and go to state 43
    FOR         shift, and go to state 44
    RETURN      shift, and go to state 45
    '('         shift, and go to state 46
    '&'         shift, and go to state 47
    '*'         shift, and go to state 48
    '-'         shift, and go to state 49
    ';'         shift, and go to state 50
    '{'         shift, and go to state 31
    '}'         shift, and go to state 108

    primary_expression         go to state 52
    postfix_expression         go to state 53
    unary_expression           go to state 54
    unary_operator             go to state 55
    multiplicative_expression  go to state 56
    additive_expression        go to state 57
    relational_expression      go to state 58
    equality_expression        go to state 59
    logical_and_expression     go to state 60
    logical_or_expression      go to state 61
    binary_expression          go to state 62
    expression                 go to state 63
    declaration                go to state 109
    declaration_specifiers     go to state 65
    type_specifier             go to state 7
    struct_specifier           go to state 8
    statement                  go to state 66
    compound_statement         go to state 67
    statement_list             go to state 110
    expression_statement       go to state 70
    selection_statement        go to state 71
    iteration_statement        go to state 72
    jump_statement             go to state 73


State 69

   69 compound_statement: '{' statement_list . '}'
   75 statement_list: statement_list . statement

    IDENTIFIER  shift, and go to state 39
    CONSTANT    shift, and go to state 40
    SIZEOF      shift, and go to state 41
    IF          shift, and go to state 42
    WHILE       shift, and go to state 43
    FOR         shift, and go to state 44
    RETURN      shift, and go to state 45
    '('         shift, and go to state 46
    '&'         shift, and go to state 47
    '*'         shift, and go to state 48
    '-'         shift, and go to state 49
    ';'         shift, and go to state 50
    '{'         shift, and go to state 31
    '}'         shift, and go to state 111

    primary_expression         go to state 52
    postfix_expression         go to state 53
    unary_expression           go to state 54
    unary_operator             go to state 55
    multiplicative_expression  go to state 56
    additive_expression        go to state 57
    relational_expression      go to state 58
    equality_expression        go to state 59
    logical_and_expression     go to state 60
    logical_or_expression      go to state 61
    binary_expression          go to state 62
    expression                 go to state 63
    statement                  go to state 112
    compound_statement         go to state 67
    expression_statement       go to state 70
    selection_statement        go to state 71
    iteration_statement        go to state 72
    jump_statement             go to state 73


State 70

   64 statement: expression_statement .

    $default  reduce using rule 64 (statement)


State 71

   65 statement: selection_statement .

    $default  reduce using rule 65 (statement)


State 72

   66 statement: iteration_statement .

    $default  reduce using rule 66 (statement)


State 73

   67 statement: jump_statement .

    $default  reduce using rule 67 (statement)


State 74

   59 direct_declarator: direct_declarator '(' ')' .

    $default  reduce using rule 59 (direct_declarator)


State 75

   62 parameter_declaration: declaration_specifiers . declarator

    IDENTIFIER  shift, and go to state 16
    '('         shift, and go to state 17
    '*'         shift, and go to state 18

    declarator         go to state 113
    direct_declarator  go to state 20


State 76

   58 direct_declarator: direct_declarator '(' parameter_list . ')'
   61 parameter_list: parameter_list . ',' parameter_declaration

    ')'  shift, and go to state 114
    ','  shift, and go to state 115


State 77

   60 parameter_list: parameter_declaration .

    $default  reduce using rule 60 (parameter_list)


State 78

   48 struct_specifier: STRUCT IDENTIFIER '{' struct_declaration_list '}' .

    $default  reduce using rule 48 (struct_specifier)


State 79

   53 struct_declaration: type_specifier declarator ';' .

    $default  reduce using rule 53 (struct_declaration)


State 80

   13 unary_expression: SIZEOF '(' . type_specifier ')'
   14                 | SIZEOF '(' . expression ')'

    IDENTIFIER  shift, and go to state 39
    CONSTANT    shift, and go to state 40
    SIZEOF      shift, and go to state 41
    INT         shift, and go to state 2
    VOID        shift, and go to state 3
    STRUCT      shift, and go to state 4
    '('         shift, and go to state 46
    '&'         shift, and go to state 47
    '*'         shift, and go to state 48
    '-'         shift, and go to state 49

    primary_expression         go to state 52
    postfix_expression         go to state 53
    unary_expression           go to state 54
    unary_operator             go to state 55
    multiplicative_expression  go to state 56
    additive_expression        go to state 57
    relational_expression      go to state 58
    equality_expression        go to state 59
    logical_and_expression     go to state 60
    logical_or_expression      go to state 61
    binary_expression          go to state 62
    expression                 go to state 116
    type_specifier             go to state 117
    struct_specifier           go to state 13


State 81

   78 selection_statement: IF '(' . expression ')' statement
   79                    | IF '(' . expression ')' statement ELSE statement

    IDENTIFIER  shift, and go to state 39
    CONSTANT    shift, and go to state 40
    SIZEOF      shift, and go to state 41
    '('         shift, and go to state 46
    '&'         shift, and go to state 47
    '*'         shift, and go to state 48
    '-'         shift, and go to state 49

    primary_expression         go to state 52
    postfix_expression         go to state 53
    unary_expression           go to state 54
    unary_operator             go to state 55
    multiplicative_expression  go to state 56
    additive_expression        go to state 57
    relational_expression      go to state 58
    equality_expression        go to state 59
    logical_and_expression     go to state 60
    logical_or_expression      go to state 61
    binary_expression          go to state 62
    expression                 go to state 118


State 82

   80 iteration_statement: WHILE '(' . expression ')' statement

    IDENTIFIER  shift, and go to state 39
    CONSTANT    shift, and go to state 40
    SIZEOF      shift, and go to state 41
    '('         shift, and go to state 46
    '&'         shift, and go to state 47
    '*'         shift, and go to state 48
    '-'         shift, and go to state 49

    primary_expression         go to state 52
    postfix_expression         go to state 53
    unary_expression           go to state 54
    unary_operator             go to state 55
    multiplicative_expression  go to state 56
    additive_expression        go to state 57
    relational_expression      go to state 58
    equality_expression        go to state 59
    logical_and_expression     go to state 60
    logical_or_expression      go to state 61
    binary_expression          go to state 62
    expression                 go to state 119


State 83

   81 iteration_statement: FOR '(' . expression_statement expression_statement expression ')' statement

    IDENTIFIER  shift, and go to state 39
    CONSTANT    shift, and go to state 40
    SIZEOF      shift, and go to state 41
    '('         shift, and go to state 46
    '&'         shift, and go to state 47
    '*'         shift, and go to state 48
    '-'         shift, and go to state 49
    ';'         shift, and go to state 50

    primary_expression         go to state 52
    postfix_expression         go to state 53
    unary_expression           go to state 54
    unary_operator             go to state 55
    multiplicative_expression  go to state 56
    additive_expression        go to state 57
    relational_expression      go to state 58
    equality_expression        go to state 59
    logical_and_expression     go to state 60
    logical_or_expression      go to state 61
    binary_expression          go to state 62
    expression                 go to state 63
    expression_statement       go to state 120


State 84

   82 jump_statement: RETURN ';' .

    $default  reduce using rule 82 (jump_statement)


State 85

   83 jump_statement: RETURN expression . ';'

    ';'  shift, and go to state 121


State 86

    3 primary_expression: '(' expression . ')'

    ')'  shift, and go to state 122


State 87

    8 postfix_expression: postfix_expression PTR_OP . IDENTIFIER

    IDENTIFIER  shift, and go to state 123


State 88

    5 postfix_expression: postfix_expression '(' . ')'
    6                   | postfix_expression '(' . argument_expression_list ')'

    IDENTIFIER  shift, and go to state 39
    CONSTANT    shift, and go to state 40
    SIZEOF      shift, and go to state 41
    '('         shift, and go to state 46
    ')'         shift, and go to state 124
    '&'         shift, and go to state 47
    '*'         shift, and go to state 48
    '-'         shift, and go to state 49

    primary_expression         go to state 52
    postfix_expression         go to state 53
    argument_expression_list   go to state 125
    unary_expression           go to state 54
    unary_operator             go to state 55
    multiplicative_expression  go to state 56
    additive_expression        go to state 57
    relational_expression      go to state 58
    equality_expression        go to state 59
    logical_and_expression     go to state 60
    logical_or_expression      go to state 61
    binary_expression          go to state 62
    expression                 go to state 126


State 89

    7 postfix_expression: postfix_expression '.' . IDENTIFIER

    IDENTIFIER  shift, and go to state 127


State 90

   39 expression: unary_expression '=' . expression

    IDENTIFIER  shift, and go to state 39
    CONSTANT    shift, and go to state 40
    SIZEOF      shift, and go to state 41
    '('         shift, and go to state 46
    '&'         shift, and go to state 47
    '*'         shift, and go to state 48
    '-'         shift, and go to state 49

    primary_expression         go to state 52
    postfix_expression         go to state 53
    unary_expression           go to state 54
    unary_operator             go to state 55
    multiplicative_expression  go to state 56
    additive_expression        go to state 57
    relational_expression      go to state 58
    equality_expression        go to state 59
    logical_and_expression     go to state 60
    logical_or_expression      go to state 61
    binary_expression          go to state 62
    expression                 go to state 128


State 91

   12 unary_expression: unary_operator unary_expression .

    $default  reduce using rule 12 (unary_expression)


State 92

   19 multiplicative_expression: multiplicative_expression '*' . unary_expression

    IDENTIFIER  shift, and go to state 39
    CONSTANT    shift, and go to state 40
    SIZEOF      shift, and go to state 41
    '('         shift, and go to state 46
    '&'         shift, and go to state 47
    '*'         shift, and go to state 48
    '-'         shift, and go to state 49

    primary_expression  go to state 52
    postfix_expression  go to state 53
    unary_expression    go to state 129
    unary_operator      go to state 55


State 93

   20 multiplicative_expression: multiplicative_expression '/' . unary_expression

    IDENTIFIER  shift, and go to state 39
    CONSTANT    shift, and go to state 40
    SIZEOF      shift, and go to state 41
    '('         shift, and go to state 46
    '&'         shift, and go to state 47
    '*'         shift, and go to state 48
    '-'         shift, and go to state 49

    primary_expression  go to state 52
    postfix_expression  go to state 53
    unary_expression    go to state 130
    unary_operator      go to state 55


State 94

   23 additive_expression: additive_expression '-' . multiplicative_expression

    IDENTIFIER  shift, and go to state 39
    CONSTANT    shift, and go to state 40
    SIZEOF      shift, and go to state 41
    '('         shift, and go to state 46
    '&'         shift, and go to state 47
    '*'         shift, and go to state 48
    '-'         shift, and go to state 49

    primary_expression         go to state 52
    postfix_expression         go to state 53
    unary_expression           go to state 131
    unary_operator             go to state 55
    multiplicative_expression  go to state 132


State 95

   22 additive_expression: additive_expression '+' . multiplicative_expression

    IDENTIFIER  shift, and go to state 39
    CONSTANT    shift, and go to state 40
    SIZEOF      shift, and go to state 41
    '('         shift, and go to state 46
    '&'         shift, and go to state 47
    '*'         shift, and go to state 48
    '-'         shift, and go to state 49

    primary_expression         go to state 52
    postfix_expression         go to state 53
    unary_expression           go to state 131
    unary_operator             go to state 55
    multiplicative_expression  go to state 133


State 96

   27 relational_expression: relational_expression LE_OP . additive_expression

    IDENTIFIER  shift, and go to state 39
    CONSTANT    shift, and go to state 40
    SIZEOF      shift, and go to state 41
    '('         shift, and go to state 46
    '&'         shift, and go to state 47
    '*'         shift, and go to state 48
    '-'         shift, and go to state 49

    primary_expression         go to state 52
    postfix_expression         go to state 53
    unary_expression           go to state 131
    unary_operator             go to state 55
    multiplicative_expression  go to state 56
    additive_expression        go to state 134


State 97

   28 relational_expression: relational_expression GE_OP . additive_expression

    IDENTIFIER  shift, and go to state 39
    CONSTANT    shift, and go to state 40
    SIZEOF      shift, and go to state 41
    '('         shift, and go to state 46
    '&'         shift, and go to state 47
    '*'         shift, and go to state 48
    '-'         shift, and go to state 49

    primary_expression         go to state 52
    postfix_expression         go to state 53
    unary_expression           go to state 131
    unary_operator             go to state 55
    multiplicative_expression  go to state 56
    additive_expression        go to state 135


State 98

   25 relational_expression: relational_expression L_OP . additive_expression

    IDENTIFIER  shift, and go to state 39
    CONSTANT    shift, and go to state 40
    SIZEOF      shift, and go to state 41
    '('         shift, and go to state 46
    '&'         shift, and go to state 47
    '*'         shift, and go to state 48
    '-'         shift, and go to state 49

    primary_expression         go to state 52
    postfix_expression         go to state 53
    unary_expression           go to state 131
    unary_operator             go to state 55
    multiplicative_expression  go to state 56
    additive_expression        go to state 136


State 99

   26 relational_expression: relational_expression G_OP . additive_expression

    IDENTIFIER  shift, and go to state 39
    CONSTANT    shift, and go to state 40
    SIZEOF      shift, and go to state 41
    '('         shift, and go to state 46
    '&'         shift, and go to state 47
    '*'         shift, and go to state 48
    '-'         shift, and go to state 49

    primary_expression         go to state 52
    postfix_expression         go to state 53
    unary_expression           go to state 131
    unary_operator             go to state 55
    multiplicative_expression  go to state 56
    additive_expression        go to state 137


State 100

   30 equality_expression: equality_expression EQ_OP . relational_expression

    IDENTIFIER  shift, and go to state 39
    CONSTANT    shift, and go to state 40
    SIZEOF      shift, and go to state 41
    '('         shift, and go to state 46
    '&'         shift, and go to state 47
    '*'         shift, and go to state 48
    '-'         shift, and go to state 49

    primary_expression         go to state 52
    postfix_expression         go to state 53
    unary_expression           go to state 131
    unary_operator             go to state 55
    multiplicative_expression  go to state 56
    additive_expression        go to state 57
    relational_expression      go to state 138


State 101

   31 equality_expression: equality_expression NE_OP . relational_expression

    IDENTIFIER  shift, and go to state 39
    CONSTANT    shift, and go to state 40
    SIZEOF      shift, and go to state 41
    '('         shift, and go to state 46
    '&'         shift, and go to state 47
    '*'         shift, and go to state 48
    '-'         shift, and go to state 49

    primary_expression         go to state 52
    postfix_expression         go to state 53
    unary_expression           go to state 131
    unary_operator             go to state 55
    multiplicative_expression  go to state 56
    additive_expression        go to state 57
    relational_expression      go to state 139


State 102

   33 logical_and_expression: logical_and_expression AND_OP . equality_expression

    IDENTIFIER  shift, and go to state 39
    CONSTANT    shift, and go to state 40
    SIZEOF      shift, and go to state 41
    '('         shift, and go to state 46
    '&'         shift, and go to state 47
    '*'         shift, and go to state 48
    '-'         shift, and go to state 49

    primary_expression         go to state 52
    postfix_expression         go to state 53
    unary_expression           go to state 131
    unary_operator             go to state 55
    multiplicative_expression  go to state 56
    additive_expression        go to state 57
    relational_expression      go to state 58
    equality_expression        go to state 140


State 103

   36 binary_expression: logical_or_expression RB_OP . logical_or_expression

    IDENTIFIER  shift, and go to state 39
    CONSTANT    shift, and go to state 40
    SIZEOF      shift, and go to state 41
    '('         shift, and go to state 46
    '&'         shift, and go to state 47
    '*'         shift, and go to state 48
    '-'         shift, and go to state 49

    primary_expression         go to state 52
    postfix_expression         go to state 53
    unary_expression           go to state 131
    unary_operator             go to state 55
    multiplicative_expression  go to state 56
    additive_expression        go to state 57
    relational_expression      go to state 58
    equality_expression        go to state 59
    logical_and_expression     go to state 60
    logical_or_expression      go to state 141


State 104

   37 binary_expression: logical_or_expression LB_OP . logical_or_expression

    IDENTIFIER  shift, and go to state 39
    CONSTANT    shift, and go to state 40
    SIZEOF      shift, and go to state 41
    '('         shift, and go to state 46
    '&'         shift, and go to state 47
    '*'         shift, and go to state 48
    '-'         shift, and go to state 49

    primary_expression         go to state 52
    postfix_expression         go to state 53
    unary_expression           go to state 131
    unary_operator             go to state 55
    multiplicative_expression  go to state 56
    additive_expression        go to state 57
    relational_expression      go to state 58
    equality_expression        go to state 59
    logical_and_expression     go to state 60
    logical_or_expression      go to state 142


State 105

   35 logical_or_expression: logical_or_expression OR_OP . logical_and_expression

    IDENTIFIER  shift, and go to state 39
    CONSTANT    shift, and go to state 40
    SIZEOF      shift, and go to state 41
    '('         shift, and go to state 46
    '&'         shift, and go to state 47
    '*'         shift, and go to state 48
    '-'         shift, and go to state 49

    primary_expression         go to state 52
    postfix_expression         go to state 53
    unary_expression           go to state 131
    unary_operator             go to state 55
    multiplicative_expression  go to state 56
    additive_expression        go to state 57
    relational_expression      go to state 58
    equality_expression        go to state 59
    logical_and_expression     go to state 143


State 106

   77 expression_statement: expression ';' .

    $default  reduce using rule 77 (expression_statement)


State 107

   41 declaration: declaration_specifiers declarator . ';'

    ';'  shift, and go to state 30


State 108

   70 compound_statement: '{' declaration_list '}' .

    $default  reduce using rule 70 (compound_statement)


State 109

   73 declaration_list: declaration_list declaration .

    $default  reduce using rule 73 (declaration_list)


State 110

   71 compound_statement: '{' declaration_list statement_list . '}'
   75 statement_list: statement_list . statement

    IDENTIFIER  shift, and go to state 39
    CONSTANT    shift, and go to state 40
    SIZEOF      shift, and go to state 41
    IF          shift, and go to state 42
    WHILE       shift, and go to state 43
    FOR         shift, and go to state 44
    RETURN      shift, and go to state 45
    '('         shift, and go to state 46
    '&'         shift, and go to state 47
    '*'         shift, and go to state 48
    '-'         shift, and go to state 49
    ';'         shift, and go to state 50
    '{'         shift, and go to state 31
    '}'         shift, and go to state 144

    primary_expression         go to state 52
    postfix_expression         go to state 53
    unary_expression           go to state 54
    unary_operator             go to state 55
    multiplicative_expression  go to state 56
    additive_expression        go to state 57
    relational_expression      go to state 58
    equality_expression        go to state 59
    logical_and_expression     go to state 60
    logical_or_expression      go to state 61
    binary_expression          go to state 62
    expression                 go to state 63
    statement                  go to state 112
    compound_statement         go to state 67
    expression_statement       go to state 70
    selection_statement        go to state 71
    iteration_statement        go to state 72
    jump_statement             go to state 73


State 111

   69 compound_statement: '{' statement_list '}' .

    $default  reduce using rule 69 (compound_statement)


State 112

   75 statement_list: statement_list statement .

    $default  reduce using rule 75 (statement_list)


State 113

   62 parameter_declaration: declaration_specifiers declarator .

    $default  reduce using rule 62 (parameter_declaration)


State 114

   58 direct_declarator: direct_declarator '(' parameter_list ')' .

    $default  reduce using rule 58 (direct_declarator)


State 115

   61 parameter_list: parameter_list ',' . parameter_declaration

    EXTERN  shift, and go to state 1
    INT     shift, and go to state 2
    VOID    shift, and go to state 3
    STRUCT  shift, and go to state 4

    declaration_specifiers  go to state 75
    type_specifier          go to state 7
    struct_specifier        go to state 13
    parameter_declaration   go to state 145


State 116

   14 unary_expression: SIZEOF '(' expression . ')'

    ')'  shift, and go to state 146


State 117

   13 unary_expression: SIZEOF '(' type_specifier . ')'

    ')'  shift, and go to state 147


State 118

   78 selection_statement: IF '(' expression . ')' statement
   79                    | IF '(' expression . ')' statement ELSE statement

    ')'  shift, and go to state 148


State 119

   80 iteration_statement: WHILE '(' expression . ')' statement

    ')'  shift, and go to state 149


State 120

   81 iteration_statement: FOR '(' expression_statement . expression_statement expression ')' statement

    IDENTIFIER  shift, and go to state 39
    CONSTANT    shift, and go to state 40
    SIZEOF      shift, and go to state 41
    '('         shift, and go to state 46
    '&'         shift, and go to state 47
    '*'         shift, and go to state 48
    '-'         shift, and go to state 49
    ';'         shift, and go to state 50

    primary_expression         go to state 52
    postfix_expression         go to state 53
    unary_expression           go to state 54
    unary_operator             go to state 55
    multiplicative_expression  go to state 56
    additive_expression        go to state 57
    relational_expression      go to state 58
    equality_expression        go to state 59
    logical_and_expression     go to state 60
    logical_or_expression      go to state 61
    binary_expression          go to state 62
    expression                 go to state 63
    expression_statement       go to state 150


State 121

   83 jump_statement: RETURN expression ';' .

    $default  reduce using rule 83 (jump_statement)


State 122

    3 primary_expression: '(' expression ')' .

    $default  reduce using rule 3 (primary_expression)


State 123

    8 postfix_expression: postfix_expression PTR_OP IDENTIFIER .

    $default  reduce using rule 8 (postfix_expression)


State 124

    5 postfix_expression: postfix_expression '(' ')' .

    $default  reduce using rule 5 (postfix_expression)


State 125

    6 postfix_expression: postfix_expression '(' argument_expression_list . ')'
   10 argument_expression_list: argument_expression_list . ',' expression

    ')'  shift, and go to state 151
    ','  shift, and go to state 152


State 126

    9 argument_expression_list: expression .

    $default  reduce using rule 9 (argument_expression_list)


State 127

    7 postfix_expression: postfix_expression '.' IDENTIFIER .

    $default  reduce using rule 7 (postfix_expression)


State 128

   39 expression: unary_expression '=' expression .

    $default  reduce using rule 39 (expression)


State 129

   19 multiplicative_expression: multiplicative_expression '*' unary_expression .

    $default  reduce using rule 19 (multiplicative_expression)


State 130

   20 multiplicative_expression: multiplicative_expression '/' unary_expression .

    $default  reduce using rule 20 (multiplicative_expression)


State 131

   18 multiplicative_expression: unary_expression .

    $default  reduce using rule 18 (multiplicative_expression)


State 132

   19 multiplicative_expression: multiplicative_expression . '*' unary_expression
   20                          | multiplicative_expression . '/' unary_expression
   23 additive_expression: additive_expression '-' multiplicative_expression .

    '*'  shift, and go to state 92
    '/'  shift, and go to state 93

    $default  reduce using rule 23 (additive_expression)


State 133

   19 multiplicative_expression: multiplicative_expression . '*' unary_expression
   20                          | multiplicative_expression . '/' unary_expression
   22 additive_expression: additive_expression '+' multiplicative_expression .

    '*'  shift, and go to state 92
    '/'  shift, and go to state 93

    $default  reduce using rule 22 (additive_expression)


State 134

   22 additive_expression: additive_expression . '+' multiplicative_expression
   23                    | additive_expression . '-' multiplicative_expression
   27 relational_expression: relational_expression LE_OP additive_expression .

    '-'  shift, and go to state 94
    '+'  shift, and go to state 95

    $default  reduce using rule 27 (relational_expression)


State 135

   22 additive_expression: additive_expression . '+' multiplicative_expression
   23                    | additive_expression . '-' multiplicative_expression
   28 relational_expression: relational_expression GE_OP additive_expression .

    '-'  shift, and go to state 94
    '+'  shift, and go to state 95

    $default  reduce using rule 28 (relational_expression)


State 136

   22 additive_expression: additive_expression . '+' multiplicative_expression
   23                    | additive_expression . '-' multiplicative_expression
   25 relational_expression: relational_expression L_OP additive_expression .

    '-'  shift, and go to state 94
    '+'  shift, and go to state 95

    $default  reduce using rule 25 (relational_expression)


State 137

   22 additive_expression: additive_expression . '+' multiplicative_expression
   23                    | additive_expression . '-' multiplicative_expression
   26 relational_expression: relational_expression G_OP additive_expression .

    '-'  shift, and go to state 94
    '+'  shift, and go to state 95

    $default  reduce using rule 26 (relational_expression)


State 138

   25 relational_expression: relational_expression . L_OP additive_expression
   26                      | relational_expression . G_OP additive_expression
   27                      | relational_expression . LE_OP additive_expression
   28                      | relational_expression . GE_OP additive_expression
   30 equality_expression: equality_expression EQ_OP relational_expression .

    LE_OP  shift, and go to state 96
    GE_OP  shift, and go to state 97
    L_OP   shift, and go to state 98
    G_OP   shift, and go to state 99

    $default  reduce using rule 30 (equality_expression)


State 139

   25 relational_expression: relational_expression . L_OP additive_expression
   26                      | relational_expression . G_OP additive_expression
   27                      | relational_expression . LE_OP additive_expression
   28                      | relational_expression . GE_OP additive_expression
   31 equality_expression: equality_expression NE_OP relational_expression .

    LE_OP  shift, and go to state 96
    GE_OP  shift, and go to state 97
    L_OP   shift, and go to state 98
    G_OP   shift, and go to state 99

    $default  reduce using rule 31 (equality_expression)


State 140

   30 equality_expression: equality_expression . EQ_OP relational_expression
   31                    | equality_expression . NE_OP relational_expression
   33 logical_and_expression: logical_and_expression AND_OP equality_expression .

    EQ_OP  shift, and go to state 100
    NE_OP  shift, and go to state 101

    $default  reduce using rule 33 (logical_and_expression)


State 141

   35 logical_or_expression: logical_or_expression . OR_OP logical_and_expression
   36 binary_expression: logical_or_expression RB_OP logical_or_expression .

    OR_OP  shift, and go to state 105

    $default  reduce using rule 36 (binary_expression)


State 142

   35 logical_or_expression: logical_or_expression . OR_OP logical_and_expression
   37 binary_expression: logical_or_expression LB_OP logical_or_expression .

    OR_OP  shift, and go to state 105

    $default  reduce using rule 37 (binary_expression)


State 143

   33 logical_and_expression: logical_and_expression . AND_OP equality_expression
   35 logical_or_expression: logical_or_expression OR_OP logical_and_expression .

    AND_OP  shift, and go to state 102

    $default  reduce using rule 35 (logical_or_expression)


State 144

   71 compound_statement: '{' declaration_list statement_list '}' .

    $default  reduce using rule 71 (compound_statement)


State 145

   61 parameter_list: parameter_list ',' parameter_declaration .

    $default  reduce using rule 61 (parameter_list)


State 146

   14 unary_expression: SIZEOF '(' expression ')' .

    $default  reduce using rule 14 (unary_expression)


State 147

   13 unary_expression: SIZEOF '(' type_specifier ')' .

    $default  reduce using rule 13 (unary_expression)


State 148

   78 selection_statement: IF '(' expression ')' . statement
   79                    | IF '(' expression ')' . statement ELSE statement

    IDENTIFIER  shift, and go to state 39
    CONSTANT    shift, and go to state 40
    SIZEOF      shift, and go to state 41
    IF          shift, and go to state 42
    WHILE       shift, and go to state 43
    FOR         shift, and go to state 44
    RETURN      shift, and go to state 45
    '('         shift, and go to state 46
    '&'         shift, and go to state 47
    '*'         shift, and go to state 48
    '-'         shift, and go to state 49
    ';'         shift, and go to state 50
    '{'         shift, and go to state 31

    primary_expression         go to state 52
    postfix_expression         go to state 53
    unary_expression           go to state 54
    unary_operator             go to state 55
    multiplicative_expression  go to state 56
    additive_expression        go to state 57
    relational_expression      go to state 58
    equality_expression        go to state 59
    logical_and_expression     go to state 60
    logical_or_expression      go to state 61
    binary_expression          go to state 62
    expression                 go to state 63
    statement                  go to state 153
    compound_statement         go to state 67
    expression_statement       go to state 70
    selection_statement        go to state 71
    iteration_statement        go to state 72
    jump_statement             go to state 73


State 149

   80 iteration_statement: WHILE '(' expression ')' . statement

    IDENTIFIER  shift, and go to state 39
    CONSTANT    shift, and go to state 40
    SIZEOF      shift, and go to state 41
    IF          shift, and go to state 42
    WHILE       shift, and go to state 43
    FOR         shift, and go to state 44
    RETURN      shift, and go to state 45
    '('         shift, and go to state 46
    '&'         shift, and go to state 47
    '*'         shift, and go to state 48
    '-'         shift, and go to state 49
    ';'         shift, and go to state 50
    '{'         shift, and go to state 31

    primary_expression         go to state 52
    postfix_expression         go to state 53
    unary_expression           go to state 54
    unary_operator             go to state 55
    multiplicative_expression  go to state 56
    additive_expression        go to state 57
    relational_expression      go to state 58
    equality_expression        go to state 59
    logical_and_expression     go to state 60
    logical_or_expression      go to state 61
    binary_expression          go to state 62
    expression                 go to state 63
    statement                  go to state 154
    compound_statement         go to state 67
    expression_statement       go to state 70
    selection_statement        go to state 71
    iteration_statement        go to state 72
    jump_statement             go to state 73


State 150

   81 iteration_statement: FOR '(' expression_statement expression_statement . expression ')' statement

    IDENTIFIER  shift, and go to state 39
    CONSTANT    shift, and go to state 40
    SIZEOF      shift, and go to state 41
    '('         shift, and go to state 46
    '&'         shift, and go to state 47
    '*'         shift, and go to state 48
    '-'         shift, and go to state 49

    primary_expression         go to state 52
    postfix_expression         go to state 53
    unary_expression           go to state 54
    unary_operator             go to state 55
    multiplicative_expression  go to state 56
    additive_expression        go to state 57
    relational_expression      go to state 58
    equality_expression        go to state 59
    logical_and_expression     go to state 60
    logical_or_expression      go to state 61
    binary_expression          go to state 62
    expression                 go to state 155


State 151

    6 postfix_expression: postfix_expression '(' argument_expression_list ')' .

    $default  reduce using rule 6 (postfix_expression)


State 152

   10 argument_expression_list: argument_expression_list ',' . expression

    IDENTIFIER  shift, and go to state 39
    CONSTANT    shift, and go to state 40
    SIZEOF      shift, and go to state 41
    '('         shift, and go to state 46
    '&'         shift, and go to state 47
    '*'         shift, and go to state 48
    '-'         shift, and go to state 49

    primary_expression         go to state 52
    postfix_expression         go to state 53
    unary_expression           go to state 54
    unary_operator             go to state 55
    multiplicative_expression  go to state 56
    additive_expression        go to state 57
    relational_expression      go to state 58
    equality_expression        go to state 59
    logical_and_expression     go to state 60
    logical_or_expression      go to state 61
    binary_expression          go to state 62
    expression                 go to state 156


State 153

   78 selection_statement: IF '(' expression ')' statement .
   79                    | IF '(' expression ')' statement . ELSE statement

    ELSE  shift, and go to state 157

    ELSE      [reduce using rule 78 (selection_statement)]
    $default  reduce using rule 78 (selection_statement)


State 154

   80 iteration_statement: WHILE '(' expression ')' statement .

    $default  reduce using rule 80 (iteration_statement)


State 155

   81 iteration_statement: FOR '(' expression_statement expression_statement expression . ')' statement

    ')'  shift, and go to state 158


State 156

   10 argument_expression_list: argument_expression_list ',' expression .

    $default  reduce using rule 10 (argument_expression_list)


State 157

   79 selection_statement: IF '(' expression ')' statement ELSE . statement

    IDENTIFIER  shift, and go to state 39
    CONSTANT    shift, and go to state 40
    SIZEOF      shift, and go to state 41
    IF          shift, and go to state 42
    WHILE       shift, and go to state 43
    FOR         shift, and go to state 44
    RETURN      shift, and go to state 45
    '('         shift, and go to state 46
    '&'         shift, and go to state 47
    '*'         shift, and go to state 48
    '-'         shift, and go to state 49
    ';'         shift, and go to state 50
    '{'         shift, and go to state 31

    primary_expression         go to state 52
    postfix_expression         go to state 53
    unary_expression           go to state 54
    unary_operator             go to state 55
    multiplicative_expression  go to state 56
    additive_expression        go to state 57
    relational_expression      go to state 58
    equality_expression        go to state 59
    logical_and_expression     go to state 60
    logical_or_expression      go to state 61
    binary_expression          go to state 62
    expression                 go to state 63
    statement                  go to state 159
    compound_statement         go to state 67
    expression_statement       go to state 70
    selection_statement        go to state 71
    iteration_statement        go to state 72
    jump_statement             go to state 73


State 158

   81 iteration_statement: FOR '(' expression_statement expression_statement expression ')' . statement

    IDENTIFIER  shift, and go to state 39
    CONSTANT    shift, and go to state 40
    SIZEOF      shift, and go to state 41
    IF          shift, and go to state 42
    WHILE       shift, and go to state 43
    FOR         shift, and go to state 44
    RETURN      shift, and go to state 45
    '('         shift, and go to state 46
    '&'         shift, and go to state 47
    '*'         shift, and go to state 48
    '-'         shift, and go to state 49
    ';'         shift, and go to state 50
    '{'         shift, and go to state 31

    primary_expression         go to state 52
    postfix_expression         go to state 53
    unary_expression           go to state 54
    unary_operator             go to state 55
    multiplicative_expression  go to state 56
    additive_expression        go to state 57
    relational_expression      go to state 58
    equality_expression        go to state 59
    logical_and_expression     go to state 60
    logical_or_expression      go to state 61
    binary_expression          go to state 62
    expression                 go to state 63
    statement                  go to state 160
    compound_statement         go to state 67
    expression_statement       go to state 70
    selection_statement        go to state 71
    iteration_statement        go to state 72
    jump_statement             go to state 73


State 159

   79 selection_statement: IF '(' expression ')' statement ELSE statement .

    $default  reduce using rule 79 (selection_statement)


State 160

   81 iteration_statement: FOR '(' expression_statement expression_statement expression ')' statement .

    $default  reduce using rule 81 (iteration_statement)
